<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.ericsson.nms.mediation</groupId>
    <artifactId>camel-engine</artifactId>
    <version>3.2.8-SNAPSHOT</version>
  </parent>
  <groupId>org.jboss.as.camel</groupId>
  <artifactId>subsystem</artifactId>
  <name>subsystem</name>

  <build>
    <finalName>${project.parent.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-resources-standalone-files</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <overwrite>true</overwrite>
              <outputDirectory>target/module-xml</outputDirectory>
              <resources>
                <resource>
                  <directory>src/module</directory>
                  <includes>
                    <include>module.xml</include>
                  </includes>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/module-jars</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
              <actTransitively>false</actTransitively>
              <excludeTransitive>true</excludeTransitive>
              <excludeScope>test</excludeScope>
              <includeScope>compile</includeScope>
              <excludeArtifactIds>jboss-as-controller,jboss-as-server</excludeArtifactIds>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <argLine>-XX:-UseSplitVerifier</argLine>
          <redirectTestOutputToFile>true</redirectTestOutputToFile>
          <enableAssertions>true</enableAssertions>
          <systemProperties>
            <property>
              <name>jboss.home</name>
              <value>${jboss.home}</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <inherited>false</inherited>
        <version>1.6</version>
        <executions>
          <execution>
            <id>build-dist</id>
            <goals>
              <goal>run</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <target>
                <!-- Replace the '.' in ${module.name} with '/' to get its path -->
                <tempfile property="temp.file" />
                <echo message="${module.name}" file="${temp.file}" />
                <replace file="${temp.file}" token="." value="/" />
                <loadfile srcfile="${temp.file}" property="module.path" />
                <delete file="${temp.file}" />

                <delete dir="target/module" />
                <property name="module.dir" value="target/module/${module.path}/main" />

                <copy file="target/module-xml/module.xml" tofile="${module.dir}/module.xml" />
                <copy file="target/${project.parent.artifactId}-${project.version}.jar" todir="${module.dir}" />
                <copy file="target/module-jars/camel-integration-api-${project.version}.jar" todir="${module.dir}" />
                <echo>Module ${module.name} has been created in the
                  target/module directory. Copy to your JBoss AS 7 installation.</echo>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
              <finalName>${project.artifactId}</finalName>
              <descriptor>src/main/resources/assembly.xml</descriptor>
              <classifier>camel-subsystem-module</classifier>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>



  <dependencies>
    <dependency>
      <groupId>com.ericsson.nms.mediation</groupId>
      <artifactId>core-mediation-flow-api</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javassist</groupId>
      <artifactId>javassist</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as.camel</groupId>
      <artifactId>camel-integration-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-core</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-spring</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.camel</groupId>
      <artifactId>camel-jms</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-transactions</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-weld</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-controller</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-server</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.jboss.as</groupId>
      <artifactId>jboss-as-subsystem-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-module-junit4</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.powermock</groupId>
      <artifactId>powermock-api-mockito</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ericsson.oss.itpf.common.flow</groupId>
      <artifactId>eventflow-api</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

</project>
